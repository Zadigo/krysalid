from email.generator import Generator
from typing import OrderedDict, Tuple, Type, Union
from krysalid.parser import HTMLPageParser
from krysalid.html_tags import Tag, ElementData

class BaseCompiler:
    pass


class Compiler(BaseCompiler):
    def __init__(self, page_parser: HTMLPageParser): ...
    def clone(self) -> Compiler: ...
    
    def compile_query(self, query: dict): ...        
        
    def compile_tag(self, name: str, attrs: dict, coordinates: list[int, int], category: str, index: int) -> Union[Tag, ElementData]: ...
    
    def build_attrs(self, attrs: list) -> OrderedDict: ...
    def detect_category(self, category: str) -> Union[Type[Tag], Type[ElementData]]: ...
    def format_page(self, page: str) -> str: ...
    def pre_compile_setup(self, page: str) -> None: ...
    def result_iteration(self) -> list: ...
    def get_top_and_lower_indexes(self, name: str) -> Tuple[int, int]: ...
    def get_tag(self, name: str) -> list: ...
    def get_tags(self, name: str) -> Generator: ...
