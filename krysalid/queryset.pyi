from typing import Generator, Iterator, Optional, Tuple, TypeVar, Union

from krysalid import queryset
from krysalid.compiler import Compiler
from krysalid.html_tags import Comment, ElementData, NewLine, Tag

_ItemsIterable = TypeVar('_ItemsIterable', bound=queryset.QuerySet, covariant=True)


class ItemsIterable:
    def __init__(self, queryset: queryset.QuerySet) -> None: ...
    def __iter__(self) -> Generator: ...


class QuerySet:
    iterable_class: _ItemsIterable = ...
    compiler: Compiler = ...
    result_cache: list[tuple] = ...
    query: dict = ...
    def __init__(self, compiler: Compiler = Optional[None]) -> None: ...
    def __repr__(self) -> str: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator: ...
    def __getitem__(self, index) -> Union[Tag, ElementData, NewLine, Comment]: ...
    def __eq__(self, obj) -> bool: ...
    def __and__(self, obj): ...
    def __or__(self, obj): ...
    def __bool__(self) -> bool: ...
    @classmethod
    def clone(cls, compiler: Compiler) -> QuerySet: ...
    def first(self) -> Union[Tag, ElementData, NewLine, Comment]: ...
    def last(self) -> Union[Tag, ElementData, NewLine, Comment]: ...
    def fetch_all(self) -> None: ...
    def count(self) -> int: ...
    def filter(self, *args, **kwargs) -> QuerySet: ...
    def find(self, name: str, attrs: dict = Optional[dict]): ...
    def find_all(self, name: str, attrs: dict = Optional[dict]) -> QuerySet: ...
    def distinct(self) -> QuerySet: ...
    def exclude(self, tag: str, attrs: dict = Optional[dict]) -> QuerySet: ...
    def union(self, *querysets) -> QuerySet: ...
    def difference(self, *queryets) -> QuerySet: ...
    def exists(self) -> bool: ...
    def contains(self) -> bool: ...
    def explain(self) -> str: ...
    def update_attribute(self, name: str, attr: str, value: str): ...


class RawQueryset(QuerySet):
    raw_data: list = ...
    def __init__(self, compiler: Compiler, data: list[tuple]) -> None: ...
    @classmethod
    def clone(cls, compiler: Compiler, data: list[Tuple]) -> RawQueryset : ...
        