from typing import Generator
from krysalid.compiler import Compiler

class BaseTag:
    is_string = ...
    name: str = ...
    index: str = ...
    coordinates: list = ...
    compiler: Compiler = ...
    _attrs: list = ...
    closing_tag: bool = ...
    def __init__(self, name: str, attrs: list, coordinates: list) -> None: ...
    def __repr__(self) -> str: ...
    def __hash__(self) -> int: ...
    def attrs_as_string(self) -> Generator: ...


class Tag(BaseTag): ...


class StringMixin: ...


class Comment(StringMixin, BaseTag):
    def __init__(self, data):
        super().__init__('comment', {}, ())
        self.data = data


class NewLine(StringMixin, BaseTag):
    def __init__(self, data='\n') -> None: ...        


class ElementData(StringMixin, BaseTag):
    def __init__(self, data) -> None: ...
